{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "633b97aa",
   "metadata": {},
   "source": [
    "# Numerical analysis: scientific computing\n",
    "<h4 align=\"right\"> Author: <i> Hicham Janati </i></h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cbcb568c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c945eaa",
   "metadata": {},
   "source": [
    "#### 1) Integers and floating point representations\n",
    "run the following cells below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "id": "6171e443",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a is equal to [2.] and its type is float64.\n"
     ]
    }
   ],
   "source": [
    "a = 2 * np.ones(1, dtype=float)\n",
    "print(f\"a is equal to {a} and its type is {a.dtype}.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "id": "37ad1b4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 ** 60 = [1.1529215e+18]\n",
      "2 ** 61 = [2.30584301e+18]\n",
      "2 ** 62 = [4.61168602e+18]\n",
      "2 ** 63 = [9.22337204e+18]\n",
      "2 ** 64 = [1.84467441e+19]\n",
      "2 ** 65 = [3.68934881e+19]\n",
      "2 ** 66 = [7.37869763e+19]\n",
      "2 ** 67 = [1.47573953e+20]\n"
     ]
    }
   ],
   "source": [
    "for i in range(60, 68):\n",
    "    print(f\"2 ** {i} = {a ** i}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dac01966",
   "metadata": {},
   "source": [
    "Can you explain the observed behavior ? Propose two ways to fix it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "id": "ea0d8496",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 ** 60 = 1152921504606846976\n",
      "2 ** 61 = 2305843009213693952\n",
      "2 ** 62 = 4611686018427387904\n",
      "2 ** 63 = 9223372036854775808\n",
      "2 ** 64 = 18446744073709551616\n",
      "2 ** 65 = 36893488147419103232\n",
      "2 ** 66 = 73786976294838206464\n",
      "2 ** 67 = 147573952589676412928\n",
      "2 ** 68 = 295147905179352825856\n",
      "2 ** 69 = 590295810358705651712\n",
      "2 ** 70 = 1180591620717411303424\n",
      "2 ** 71 = 2361183241434822606848\n",
      "2 ** 72 = 4722366482869645213696\n",
      "2 ** 73 = 9444732965739290427392\n",
      "2 ** 74 = 18889465931478580854784\n",
      "2 ** 75 = 37778931862957161709568\n",
      "2 ** 76 = 75557863725914323419136\n",
      "2 ** 77 = 151115727451828646838272\n",
      "2 ** 78 = 302231454903657293676544\n",
      "2 ** 79 = 604462909807314587353088\n",
      "2 ** 80 = 1208925819614629174706176\n",
      "2 ** 81 = 2417851639229258349412352\n",
      "2 ** 82 = 4835703278458516698824704\n",
      "2 ** 83 = 9671406556917033397649408\n",
      "2 ** 84 = 19342813113834066795298816\n",
      "2 ** 85 = 38685626227668133590597632\n",
      "2 ** 86 = 77371252455336267181195264\n",
      "2 ** 87 = 154742504910672534362390528\n",
      "2 ** 88 = 309485009821345068724781056\n",
      "2 ** 89 = 618970019642690137449562112\n",
      "2 ** 90 = 1237940039285380274899124224\n",
      "2 ** 91 = 2475880078570760549798248448\n",
      "2 ** 92 = 4951760157141521099596496896\n",
      "2 ** 93 = 9903520314283042199192993792\n",
      "2 ** 94 = 19807040628566084398385987584\n",
      "2 ** 95 = 39614081257132168796771975168\n",
      "2 ** 96 = 79228162514264337593543950336\n",
      "2 ** 97 = 158456325028528675187087900672\n",
      "2 ** 98 = 316912650057057350374175801344\n",
      "2 ** 99 = 633825300114114700748351602688\n",
      "2 ** 100 = 1267650600228229401496703205376\n",
      "2 ** 101 = 2535301200456458802993406410752\n",
      "2 ** 102 = 5070602400912917605986812821504\n",
      "2 ** 103 = 10141204801825835211973625643008\n",
      "2 ** 104 = 20282409603651670423947251286016\n",
      "2 ** 105 = 40564819207303340847894502572032\n",
      "2 ** 106 = 81129638414606681695789005144064\n",
      "2 ** 107 = 162259276829213363391578010288128\n",
      "2 ** 108 = 324518553658426726783156020576256\n",
      "2 ** 109 = 649037107316853453566312041152512\n",
      "2 ** 110 = 1298074214633706907132624082305024\n",
      "2 ** 111 = 2596148429267413814265248164610048\n",
      "2 ** 112 = 5192296858534827628530496329220096\n",
      "2 ** 113 = 10384593717069655257060992658440192\n",
      "2 ** 114 = 20769187434139310514121985316880384\n",
      "2 ** 115 = 41538374868278621028243970633760768\n",
      "2 ** 116 = 83076749736557242056487941267521536\n",
      "2 ** 117 = 166153499473114484112975882535043072\n",
      "2 ** 118 = 332306998946228968225951765070086144\n",
      "2 ** 119 = 664613997892457936451903530140172288\n",
      "2 ** 120 = 1329227995784915872903807060280344576\n",
      "2 ** 121 = 2658455991569831745807614120560689152\n",
      "2 ** 122 = 5316911983139663491615228241121378304\n",
      "2 ** 123 = 10633823966279326983230456482242756608\n",
      "2 ** 124 = 21267647932558653966460912964485513216\n",
      "2 ** 125 = 42535295865117307932921825928971026432\n",
      "2 ** 126 = 85070591730234615865843651857942052864\n",
      "2 ** 127 = 170141183460469231731687303715884105728\n",
      "2 ** 128 = 340282366920938463463374607431768211456\n",
      "2 ** 129 = 680564733841876926926749214863536422912\n",
      "2 ** 130 = 1361129467683753853853498429727072845824\n",
      "2 ** 131 = 2722258935367507707706996859454145691648\n",
      "2 ** 132 = 5444517870735015415413993718908291383296\n",
      "2 ** 133 = 10889035741470030830827987437816582766592\n",
      "2 ** 134 = 21778071482940061661655974875633165533184\n",
      "2 ** 135 = 43556142965880123323311949751266331066368\n",
      "2 ** 136 = 87112285931760246646623899502532662132736\n",
      "2 ** 137 = 174224571863520493293247799005065324265472\n",
      "2 ** 138 = 348449143727040986586495598010130648530944\n",
      "2 ** 139 = 696898287454081973172991196020261297061888\n",
      "2 ** 140 = 1393796574908163946345982392040522594123776\n",
      "2 ** 141 = 2787593149816327892691964784081045188247552\n",
      "2 ** 142 = 5575186299632655785383929568162090376495104\n",
      "2 ** 143 = 11150372599265311570767859136324180752990208\n",
      "2 ** 144 = 22300745198530623141535718272648361505980416\n",
      "2 ** 145 = 44601490397061246283071436545296723011960832\n",
      "2 ** 146 = 89202980794122492566142873090593446023921664\n",
      "2 ** 147 = 178405961588244985132285746181186892047843328\n",
      "2 ** 148 = 356811923176489970264571492362373784095686656\n",
      "2 ** 149 = 713623846352979940529142984724747568191373312\n",
      "2 ** 150 = 1427247692705959881058285969449495136382746624\n",
      "2 ** 151 = 2854495385411919762116571938898990272765493248\n",
      "2 ** 152 = 5708990770823839524233143877797980545530986496\n",
      "2 ** 153 = 11417981541647679048466287755595961091061972992\n",
      "2 ** 154 = 22835963083295358096932575511191922182123945984\n",
      "2 ** 155 = 45671926166590716193865151022383844364247891968\n",
      "2 ** 156 = 91343852333181432387730302044767688728495783936\n",
      "2 ** 157 = 182687704666362864775460604089535377456991567872\n",
      "2 ** 158 = 365375409332725729550921208179070754913983135744\n",
      "2 ** 159 = 730750818665451459101842416358141509827966271488\n",
      "2 ** 160 = 1461501637330902918203684832716283019655932542976\n",
      "2 ** 161 = 2923003274661805836407369665432566039311865085952\n",
      "2 ** 162 = 5846006549323611672814739330865132078623730171904\n",
      "2 ** 163 = 11692013098647223345629478661730264157247460343808\n",
      "2 ** 164 = 23384026197294446691258957323460528314494920687616\n",
      "2 ** 165 = 46768052394588893382517914646921056628989841375232\n",
      "2 ** 166 = 93536104789177786765035829293842113257979682750464\n",
      "2 ** 167 = 187072209578355573530071658587684226515959365500928\n",
      "2 ** 168 = 374144419156711147060143317175368453031918731001856\n",
      "2 ** 169 = 748288838313422294120286634350736906063837462003712\n",
      "2 ** 170 = 1496577676626844588240573268701473812127674924007424\n",
      "2 ** 171 = 2993155353253689176481146537402947624255349848014848\n",
      "2 ** 172 = 5986310706507378352962293074805895248510699696029696\n",
      "2 ** 173 = 11972621413014756705924586149611790497021399392059392\n",
      "2 ** 174 = 23945242826029513411849172299223580994042798784118784\n",
      "2 ** 175 = 47890485652059026823698344598447161988085597568237568\n",
      "2 ** 176 = 95780971304118053647396689196894323976171195136475136\n",
      "2 ** 177 = 191561942608236107294793378393788647952342390272950272\n",
      "2 ** 178 = 383123885216472214589586756787577295904684780545900544\n",
      "2 ** 179 = 766247770432944429179173513575154591809369561091801088\n",
      "2 ** 180 = 1532495540865888858358347027150309183618739122183602176\n",
      "2 ** 181 = 3064991081731777716716694054300618367237478244367204352\n",
      "2 ** 182 = 6129982163463555433433388108601236734474956488734408704\n",
      "2 ** 183 = 12259964326927110866866776217202473468949912977468817408\n",
      "2 ** 184 = 24519928653854221733733552434404946937899825954937634816\n",
      "2 ** 185 = 49039857307708443467467104868809893875799651909875269632\n",
      "2 ** 186 = 98079714615416886934934209737619787751599303819750539264\n",
      "2 ** 187 = 196159429230833773869868419475239575503198607639501078528\n",
      "2 ** 188 = 392318858461667547739736838950479151006397215279002157056\n",
      "2 ** 189 = 784637716923335095479473677900958302012794430558004314112\n",
      "2 ** 190 = 1569275433846670190958947355801916604025588861116008628224\n",
      "2 ** 191 = 3138550867693340381917894711603833208051177722232017256448\n",
      "2 ** 192 = 6277101735386680763835789423207666416102355444464034512896\n",
      "2 ** 193 = 12554203470773361527671578846415332832204710888928069025792\n",
      "2 ** 194 = 25108406941546723055343157692830665664409421777856138051584\n",
      "2 ** 195 = 50216813883093446110686315385661331328818843555712276103168\n",
      "2 ** 196 = 100433627766186892221372630771322662657637687111424552206336\n",
      "2 ** 197 = 200867255532373784442745261542645325315275374222849104412672\n",
      "2 ** 198 = 401734511064747568885490523085290650630550748445698208825344\n",
      "2 ** 199 = 803469022129495137770981046170581301261101496891396417650688\n",
      "2 ** 200 = 1606938044258990275541962092341162602522202993782792835301376\n",
      "2 ** 201 = 3213876088517980551083924184682325205044405987565585670602752\n",
      "2 ** 202 = 6427752177035961102167848369364650410088811975131171341205504\n",
      "2 ** 203 = 12855504354071922204335696738729300820177623950262342682411008\n",
      "2 ** 204 = 25711008708143844408671393477458601640355247900524685364822016\n",
      "2 ** 205 = 51422017416287688817342786954917203280710495801049370729644032\n",
      "2 ** 206 = 102844034832575377634685573909834406561420991602098741459288064\n",
      "2 ** 207 = 205688069665150755269371147819668813122841983204197482918576128\n",
      "2 ** 208 = 411376139330301510538742295639337626245683966408394965837152256\n",
      "2 ** 209 = 822752278660603021077484591278675252491367932816789931674304512\n",
      "2 ** 210 = 1645504557321206042154969182557350504982735865633579863348609024\n",
      "2 ** 211 = 3291009114642412084309938365114701009965471731267159726697218048\n",
      "2 ** 212 = 6582018229284824168619876730229402019930943462534319453394436096\n",
      "2 ** 213 = 13164036458569648337239753460458804039861886925068638906788872192\n",
      "2 ** 214 = 26328072917139296674479506920917608079723773850137277813577744384\n",
      "2 ** 215 = 52656145834278593348959013841835216159447547700274555627155488768\n",
      "2 ** 216 = 105312291668557186697918027683670432318895095400549111254310977536\n",
      "2 ** 217 = 210624583337114373395836055367340864637790190801098222508621955072\n",
      "2 ** 218 = 421249166674228746791672110734681729275580381602196445017243910144\n",
      "2 ** 219 = 842498333348457493583344221469363458551160763204392890034487820288\n",
      "2 ** 220 = 1684996666696914987166688442938726917102321526408785780068975640576\n",
      "2 ** 221 = 3369993333393829974333376885877453834204643052817571560137951281152\n",
      "2 ** 222 = 6739986666787659948666753771754907668409286105635143120275902562304\n",
      "2 ** 223 = 13479973333575319897333507543509815336818572211270286240551805124608\n",
      "2 ** 224 = 26959946667150639794667015087019630673637144422540572481103610249216\n",
      "2 ** 225 = 53919893334301279589334030174039261347274288845081144962207220498432\n",
      "2 ** 226 = 107839786668602559178668060348078522694548577690162289924414440996864\n",
      "2 ** 227 = 215679573337205118357336120696157045389097155380324579848828881993728\n",
      "2 ** 228 = 431359146674410236714672241392314090778194310760649159697657763987456\n",
      "2 ** 229 = 862718293348820473429344482784628181556388621521298319395315527974912\n",
      "2 ** 230 = 1725436586697640946858688965569256363112777243042596638790631055949824\n",
      "2 ** 231 = 3450873173395281893717377931138512726225554486085193277581262111899648\n",
      "2 ** 232 = 6901746346790563787434755862277025452451108972170386555162524223799296\n",
      "2 ** 233 = 13803492693581127574869511724554050904902217944340773110325048447598592\n",
      "2 ** 234 = 27606985387162255149739023449108101809804435888681546220650096895197184\n",
      "2 ** 235 = 55213970774324510299478046898216203619608871777363092441300193790394368\n",
      "2 ** 236 = 110427941548649020598956093796432407239217743554726184882600387580788736\n",
      "2 ** 237 = 220855883097298041197912187592864814478435487109452369765200775161577472\n",
      "2 ** 238 = 441711766194596082395824375185729628956870974218904739530401550323154944\n",
      "2 ** 239 = 883423532389192164791648750371459257913741948437809479060803100646309888\n",
      "2 ** 240 = 1766847064778384329583297500742918515827483896875618958121606201292619776\n",
      "2 ** 241 = 3533694129556768659166595001485837031654967793751237916243212402585239552\n",
      "2 ** 242 = 7067388259113537318333190002971674063309935587502475832486424805170479104\n",
      "2 ** 243 = 14134776518227074636666380005943348126619871175004951664972849610340958208\n",
      "2 ** 244 = 28269553036454149273332760011886696253239742350009903329945699220681916416\n",
      "2 ** 245 = 56539106072908298546665520023773392506479484700019806659891398441363832832\n",
      "2 ** 246 = 113078212145816597093331040047546785012958969400039613319782796882727665664\n",
      "2 ** 247 = 226156424291633194186662080095093570025917938800079226639565593765455331328\n",
      "2 ** 248 = 452312848583266388373324160190187140051835877600158453279131187530910662656\n",
      "2 ** 249 = 904625697166532776746648320380374280103671755200316906558262375061821325312\n",
      "2 ** 250 = 1809251394333065553493296640760748560207343510400633813116524750123642650624\n",
      "2 ** 251 = 3618502788666131106986593281521497120414687020801267626233049500247285301248\n",
      "2 ** 252 = 7237005577332262213973186563042994240829374041602535252466099000494570602496\n",
      "2 ** 253 = 14474011154664524427946373126085988481658748083205070504932198000989141204992\n",
      "2 ** 254 = 28948022309329048855892746252171976963317496166410141009864396001978282409984\n",
      "2 ** 255 = 57896044618658097711785492504343953926634992332820282019728792003956564819968\n",
      "2 ** 256 = 115792089237316195423570985008687907853269984665640564039457584007913129639936\n",
      "2 ** 257 = 231584178474632390847141970017375815706539969331281128078915168015826259279872\n",
      "2 ** 258 = 463168356949264781694283940034751631413079938662562256157830336031652518559744\n",
      "2 ** 259 = 926336713898529563388567880069503262826159877325124512315660672063305037119488\n",
      "2 ** 260 = 1852673427797059126777135760139006525652319754650249024631321344126610074238976\n",
      "2 ** 261 = 3705346855594118253554271520278013051304639509300498049262642688253220148477952\n",
      "2 ** 262 = 7410693711188236507108543040556026102609279018600996098525285376506440296955904\n",
      "2 ** 263 = 14821387422376473014217086081112052205218558037201992197050570753012880593911808\n",
      "2 ** 264 = 29642774844752946028434172162224104410437116074403984394101141506025761187823616\n",
      "2 ** 265 = 59285549689505892056868344324448208820874232148807968788202283012051522375647232\n",
      "2 ** 266 = 118571099379011784113736688648896417641748464297615937576404566024103044751294464\n",
      "2 ** 267 = 237142198758023568227473377297792835283496928595231875152809132048206089502588928\n",
      "2 ** 268 = 474284397516047136454946754595585670566993857190463750305618264096412179005177856\n",
      "2 ** 269 = 948568795032094272909893509191171341133987714380927500611236528192824358010355712\n",
      "2 ** 270 = 1897137590064188545819787018382342682267975428761855001222473056385648716020711424\n",
      "2 ** 271 = 3794275180128377091639574036764685364535950857523710002444946112771297432041422848\n",
      "2 ** 272 = 7588550360256754183279148073529370729071901715047420004889892225542594864082845696\n",
      "2 ** 273 = 15177100720513508366558296147058741458143803430094840009779784451085189728165691392\n",
      "2 ** 274 = 30354201441027016733116592294117482916287606860189680019559568902170379456331382784\n",
      "2 ** 275 = 60708402882054033466233184588234965832575213720379360039119137804340758912662765568\n",
      "2 ** 276 = 121416805764108066932466369176469931665150427440758720078238275608681517825325531136\n",
      "2 ** 277 = 242833611528216133864932738352939863330300854881517440156476551217363035650651062272\n",
      "2 ** 278 = 485667223056432267729865476705879726660601709763034880312953102434726071301302124544\n",
      "2 ** 279 = 971334446112864535459730953411759453321203419526069760625906204869452142602604249088\n",
      "2 ** 280 = 1942668892225729070919461906823518906642406839052139521251812409738904285205208498176\n",
      "2 ** 281 = 3885337784451458141838923813647037813284813678104279042503624819477808570410416996352\n",
      "2 ** 282 = 7770675568902916283677847627294075626569627356208558085007249638955617140820833992704\n",
      "2 ** 283 = 15541351137805832567355695254588151253139254712417116170014499277911234281641667985408\n",
      "2 ** 284 = 31082702275611665134711390509176302506278509424834232340028998555822468563283335970816\n",
      "2 ** 285 = 62165404551223330269422781018352605012557018849668464680057997111644937126566671941632\n",
      "2 ** 286 = 124330809102446660538845562036705210025114037699336929360115994223289874253133343883264\n",
      "2 ** 287 = 248661618204893321077691124073410420050228075398673858720231988446579748506266687766528\n",
      "2 ** 288 = 497323236409786642155382248146820840100456150797347717440463976893159497012533375533056\n",
      "2 ** 289 = 994646472819573284310764496293641680200912301594695434880927953786318994025066751066112\n",
      "2 ** 290 = 1989292945639146568621528992587283360401824603189390869761855907572637988050133502132224\n",
      "2 ** 291 = 3978585891278293137243057985174566720803649206378781739523711815145275976100267004264448\n",
      "2 ** 292 = 7957171782556586274486115970349133441607298412757563479047423630290551952200534008528896\n",
      "2 ** 293 = 15914343565113172548972231940698266883214596825515126958094847260581103904401068017057792\n",
      "2 ** 294 = 31828687130226345097944463881396533766429193651030253916189694521162207808802136034115584\n",
      "2 ** 295 = 63657374260452690195888927762793067532858387302060507832379389042324415617604272068231168\n",
      "2 ** 296 = 127314748520905380391777855525586135065716774604121015664758778084648831235208544136462336\n",
      "2 ** 297 = 254629497041810760783555711051172270131433549208242031329517556169297662470417088272924672\n",
      "2 ** 298 = 509258994083621521567111422102344540262867098416484062659035112338595324940834176545849344\n",
      "2 ** 299 = 1018517988167243043134222844204689080525734196832968125318070224677190649881668353091698688\n",
      "2 ** 300 = 2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397376\n",
      "2 ** 301 = 4074071952668972172536891376818756322102936787331872501272280898708762599526673412366794752\n",
      "2 ** 302 = 8148143905337944345073782753637512644205873574663745002544561797417525199053346824733589504\n",
      "2 ** 303 = 16296287810675888690147565507275025288411747149327490005089123594835050398106693649467179008\n",
      "2 ** 304 = 32592575621351777380295131014550050576823494298654980010178247189670100796213387298934358016\n",
      "2 ** 305 = 65185151242703554760590262029100101153646988597309960020356494379340201592426774597868716032\n",
      "2 ** 306 = 130370302485407109521180524058200202307293977194619920040712988758680403184853549195737432064\n",
      "2 ** 307 = 260740604970814219042361048116400404614587954389239840081425977517360806369707098391474864128\n",
      "2 ** 308 = 521481209941628438084722096232800809229175908778479680162851955034721612739414196782949728256\n",
      "2 ** 309 = 1042962419883256876169444192465601618458351817556959360325703910069443225478828393565899456512\n",
      "2 ** 310 = 2085924839766513752338888384931203236916703635113918720651407820138886450957656787131798913024\n",
      "2 ** 311 = 4171849679533027504677776769862406473833407270227837441302815640277772901915313574263597826048\n",
      "2 ** 312 = 8343699359066055009355553539724812947666814540455674882605631280555545803830627148527195652096\n",
      "2 ** 313 = 16687398718132110018711107079449625895333629080911349765211262561111091607661254297054391304192\n",
      "2 ** 314 = 33374797436264220037422214158899251790667258161822699530422525122222183215322508594108782608384\n",
      "2 ** 315 = 66749594872528440074844428317798503581334516323645399060845050244444366430645017188217565216768\n",
      "2 ** 316 = 133499189745056880149688856635597007162669032647290798121690100488888732861290034376435130433536\n",
      "2 ** 317 = 266998379490113760299377713271194014325338065294581596243380200977777465722580068752870260867072\n",
      "2 ** 318 = 533996758980227520598755426542388028650676130589163192486760401955554931445160137505740521734144\n",
      "2 ** 319 = 1067993517960455041197510853084776057301352261178326384973520803911109862890320275011481043468288\n",
      "2 ** 320 = 2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576\n",
      "2 ** 321 = 4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152\n",
      "2 ** 322 = 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304\n",
      "2 ** 323 = 17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608\n",
      "2 ** 324 = 34175792574734561318320347298712833833643272357706444319152665725155515612490248800367393390985216\n",
      "2 ** 325 = 68351585149469122636640694597425667667286544715412888638305331450311031224980497600734786781970432\n",
      "2 ** 326 = 136703170298938245273281389194851335334573089430825777276610662900622062449960995201469573563940864\n",
      "2 ** 327 = 273406340597876490546562778389702670669146178861651554553221325801244124899921990402939147127881728\n",
      "2 ** 328 = 546812681195752981093125556779405341338292357723303109106442651602488249799843980805878294255763456\n",
      "2 ** 329 = 1093625362391505962186251113558810682676584715446606218212885303204976499599687961611756588511526912\n",
      "2 ** 330 = 2187250724783011924372502227117621365353169430893212436425770606409952999199375923223513177023053824\n",
      "2 ** 331 = 4374501449566023848745004454235242730706338861786424872851541212819905998398751846447026354046107648\n",
      "2 ** 332 = 8749002899132047697490008908470485461412677723572849745703082425639811996797503692894052708092215296\n",
      "2 ** 333 = 17498005798264095394980017816940970922825355447145699491406164851279623993595007385788105416184430592\n",
      "2 ** 334 = 34996011596528190789960035633881941845650710894291398982812329702559247987190014771576210832368861184\n",
      "2 ** 335 = 69992023193056381579920071267763883691301421788582797965624659405118495974380029543152421664737722368\n",
      "2 ** 336 = 139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444736\n",
      "2 ** 337 = 279968092772225526319680285071055534765205687154331191862498637620473983897520118172609686658950889472\n",
      "2 ** 338 = 559936185544451052639360570142111069530411374308662383724997275240947967795040236345219373317901778944\n",
      "2 ** 339 = 1119872371088902105278721140284222139060822748617324767449994550481895935590080472690438746635803557888\n",
      "2 ** 340 = 2239744742177804210557442280568444278121645497234649534899989100963791871180160945380877493271607115776\n",
      "2 ** 341 = 4479489484355608421114884561136888556243290994469299069799978201927583742360321890761754986543214231552\n",
      "2 ** 342 = 8958978968711216842229769122273777112486581988938598139599956403855167484720643781523509973086428463104\n",
      "2 ** 343 = 17917957937422433684459538244547554224973163977877196279199912807710334969441287563047019946172856926208\n",
      "2 ** 344 = 35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852416\n",
      "2 ** 345 = 71671831749689734737838152978190216899892655911508785116799651230841339877765150252188079784691427704832\n",
      "2 ** 346 = 143343663499379469475676305956380433799785311823017570233599302461682679755530300504376159569382855409664\n",
      "2 ** 347 = 286687326998758938951352611912760867599570623646035140467198604923365359511060601008752319138765710819328\n",
      "2 ** 348 = 573374653997517877902705223825521735199141247292070280934397209846730719022121202017504638277531421638656\n",
      "2 ** 349 = 1146749307995035755805410447651043470398282494584140561868794419693461438044242404035009276555062843277312\n",
      "2 ** 350 = 2293498615990071511610820895302086940796564989168281123737588839386922876088484808070018553110125686554624\n",
      "2 ** 351 = 4586997231980143023221641790604173881593129978336562247475177678773845752176969616140037106220251373109248\n",
      "2 ** 352 = 9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496\n",
      "2 ** 353 = 18347988927920572092886567162416695526372519913346248989900710715095383008707878464560148424881005492436992\n",
      "2 ** 354 = 36695977855841144185773134324833391052745039826692497979801421430190766017415756929120296849762010984873984\n",
      "2 ** 355 = 73391955711682288371546268649666782105490079653384995959602842860381532034831513858240593699524021969747968\n",
      "2 ** 356 = 146783911423364576743092537299333564210980159306769991919205685720763064069663027716481187399048043939495936\n",
      "2 ** 357 = 293567822846729153486185074598667128421960318613539983838411371441526128139326055432962374798096087878991872\n",
      "2 ** 358 = 587135645693458306972370149197334256843920637227079967676822742883052256278652110865924749596192175757983744\n",
      "2 ** 359 = 1174271291386916613944740298394668513687841274454159935353645485766104512557304221731849499192384351515967488\n",
      "2 ** 360 = 2348542582773833227889480596789337027375682548908319870707290971532209025114608443463698998384768703031934976\n",
      "2 ** 361 = 4697085165547666455778961193578674054751365097816639741414581943064418050229216886927397996769537406063869952\n",
      "2 ** 362 = 9394170331095332911557922387157348109502730195633279482829163886128836100458433773854795993539074812127739904\n",
      "2 ** 363 = 18788340662190665823115844774314696219005460391266558965658327772257672200916867547709591987078149624255479808\n",
      "2 ** 364 = 37576681324381331646231689548629392438010920782533117931316655544515344401833735095419183974156299248510959616\n",
      "2 ** 365 = 75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232\n",
      "2 ** 366 = 150306725297525326584926758194517569752043683130132471725266622178061377607334940381676735896625196994043838464\n",
      "2 ** 367 = 300613450595050653169853516389035139504087366260264943450533244356122755214669880763353471793250393988087676928\n",
      "2 ** 368 = 601226901190101306339707032778070279008174732520529886901066488712245510429339761526706943586500787976175353856\n",
      "2 ** 369 = 1202453802380202612679414065556140558016349465041059773802132977424491020858679523053413887173001575952350707712\n",
      "2 ** 370 = 2404907604760405225358828131112281116032698930082119547604265954848982041717359046106827774346003151904701415424\n",
      "2 ** 371 = 4809815209520810450717656262224562232065397860164239095208531909697964083434718092213655548692006303809402830848\n",
      "2 ** 372 = 9619630419041620901435312524449124464130795720328478190417063819395928166869436184427311097384012607618805661696\n",
      "2 ** 373 = 19239260838083241802870625048898248928261591440656956380834127638791856333738872368854622194768025215237611323392\n",
      "2 ** 374 = 38478521676166483605741250097796497856523182881313912761668255277583712667477744737709244389536050430475222646784\n",
      "2 ** 375 = 76957043352332967211482500195592995713046365762627825523336510555167425334955489475418488779072100860950445293568\n",
      "2 ** 376 = 153914086704665934422965000391185991426092731525255651046673021110334850669910978950836977558144201721900890587136\n",
      "2 ** 377 = 307828173409331868845930000782371982852185463050511302093346042220669701339821957901673955116288403443801781174272\n",
      "2 ** 378 = 615656346818663737691860001564743965704370926101022604186692084441339402679643915803347910232576806887603562348544\n",
      "2 ** 379 = 1231312693637327475383720003129487931408741852202045208373384168882678805359287831606695820465153613775207124697088\n",
      "2 ** 380 = 2462625387274654950767440006258975862817483704404090416746768337765357610718575663213391640930307227550414249394176\n",
      "2 ** 381 = 4925250774549309901534880012517951725634967408808180833493536675530715221437151326426783281860614455100828498788352\n",
      "2 ** 382 = 9850501549098619803069760025035903451269934817616361666987073351061430442874302652853566563721228910201656997576704\n",
      "2 ** 383 = 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153408\n",
      "2 ** 384 = 39402006196394479212279040100143613805079739270465446667948293404245721771497210611414266254884915640806627990306816\n",
      "2 ** 385 = 78804012392788958424558080200287227610159478540930893335896586808491443542994421222828532509769831281613255980613632\n",
      "2 ** 386 = 157608024785577916849116160400574455220318957081861786671793173616982887085988842445657065019539662563226511961227264\n",
      "2 ** 387 = 315216049571155833698232320801148910440637914163723573343586347233965774171977684891314130039079325126453023922454528\n",
      "2 ** 388 = 630432099142311667396464641602297820881275828327447146687172694467931548343955369782628260078158650252906047844909056\n",
      "2 ** 389 = 1260864198284623334792929283204595641762551656654894293374345388935863096687910739565256520156317300505812095689818112\n",
      "2 ** 390 = 2521728396569246669585858566409191283525103313309788586748690777871726193375821479130513040312634601011624191379636224\n",
      "2 ** 391 = 5043456793138493339171717132818382567050206626619577173497381555743452386751642958261026080625269202023248382759272448\n",
      "2 ** 392 = 10086913586276986678343434265636765134100413253239154346994763111486904773503285916522052161250538404046496765518544896\n",
      "2 ** 393 = 20173827172553973356686868531273530268200826506478308693989526222973809547006571833044104322501076808092993531037089792\n",
      "2 ** 394 = 40347654345107946713373737062547060536401653012956617387979052445947619094013143666088208645002153616185987062074179584\n",
      "2 ** 395 = 80695308690215893426747474125094121072803306025913234775958104891895238188026287332176417290004307232371974124148359168\n",
      "2 ** 396 = 161390617380431786853494948250188242145606612051826469551916209783790476376052574664352834580008614464743948248296718336\n",
      "2 ** 397 = 322781234760863573706989896500376484291213224103652939103832419567580952752105149328705669160017228929487896496593436672\n",
      "2 ** 398 = 645562469521727147413979793000752968582426448207305878207664839135161905504210298657411338320034457858975792993186873344\n",
      "2 ** 399 = 1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746688\n",
      "2 ** 400 = 2582249878086908589655919172003011874329705792829223512830659356540647622016841194629645353280137831435903171972747493376\n",
      "2 ** 401 = 5164499756173817179311838344006023748659411585658447025661318713081295244033682389259290706560275662871806343945494986752\n",
      "2 ** 402 = 10328999512347634358623676688012047497318823171316894051322637426162590488067364778518581413120551325743612687890989973504\n",
      "2 ** 403 = 20657999024695268717247353376024094994637646342633788102645274852325180976134729557037162826241102651487225375781979947008\n",
      "2 ** 404 = 41315998049390537434494706752048189989275292685267576205290549704650361952269459114074325652482205302974450751563959894016\n",
      "2 ** 405 = 82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032\n",
      "2 ** 406 = 165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064\n",
      "2 ** 407 = 330527984395124299475957654016385519914202341482140609642324397637202895618155672912594605219857642423795606012511679152128\n",
      "2 ** 408 = 661055968790248598951915308032771039828404682964281219284648795274405791236311345825189210439715284847591212025023358304256\n",
      "2 ** 409 = 1322111937580497197903830616065542079656809365928562438569297590548811582472622691650378420879430569695182424050046716608512\n",
      "2 ** 410 = 2644223875160994395807661232131084159313618731857124877138595181097623164945245383300756841758861139390364848100093433217024\n",
      "2 ** 411 = 5288447750321988791615322464262168318627237463714249754277190362195246329890490766601513683517722278780729696200186866434048\n",
      "2 ** 412 = 10576895500643977583230644928524336637254474927428499508554380724390492659780981533203027367035444557561459392400373732868096\n",
      "2 ** 413 = 21153791001287955166461289857048673274508949854856999017108761448780985319561963066406054734070889115122918784800747465736192\n",
      "2 ** 414 = 42307582002575910332922579714097346549017899709713998034217522897561970639123926132812109468141778230245837569601494931472384\n",
      "2 ** 415 = 84615164005151820665845159428194693098035799419427996068435045795123941278247852265624218936283556460491675139202989862944768\n",
      "2 ** 416 = 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536\n",
      "2 ** 417 = 338460656020607282663380637712778772392143197677711984273740183180495765112991409062496875745134225841966700556811959451779072\n",
      "2 ** 418 = 676921312041214565326761275425557544784286395355423968547480366360991530225982818124993751490268451683933401113623918903558144\n",
      "2 ** 419 = 1353842624082429130653522550851115089568572790710847937094960732721983060451965636249987502980536903367866802227247837807116288\n",
      "2 ** 420 = 2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576\n",
      "2 ** 421 = 5415370496329716522614090203404460358274291162843391748379842930887932241807862544999950011922147613471467208908991351228465152\n",
      "2 ** 422 = 10830740992659433045228180406808920716548582325686783496759685861775864483615725089999900023844295226942934417817982702456930304\n",
      "2 ** 423 = 21661481985318866090456360813617841433097164651373566993519371723551728967231450179999800047688590453885868835635965404913860608\n",
      "2 ** 424 = 43322963970637732180912721627235682866194329302747133987038743447103457934462900359999600095377180907771737671271930809827721216\n",
      "2 ** 425 = 86645927941275464361825443254471365732388658605494267974077486894206915868925800719999200190754361815543475342543861619655442432\n",
      "2 ** 426 = 173291855882550928723650886508942731464777317210988535948154973788413831737851601439998400381508723631086950685087723239310884864\n",
      "2 ** 427 = 346583711765101857447301773017885462929554634421977071896309947576827663475703202879996800763017447262173901370175446478621769728\n",
      "2 ** 428 = 693167423530203714894603546035770925859109268843954143792619895153655326951406405759993601526034894524347802740350892957243539456\n",
      "2 ** 429 = 1386334847060407429789207092071541851718218537687908287585239790307310653902812811519987203052069789048695605480701785914487078912\n",
      "2 ** 430 = 2772669694120814859578414184143083703436437075375816575170479580614621307805625623039974406104139578097391210961403571828974157824\n",
      "2 ** 431 = 5545339388241629719156828368286167406872874150751633150340959161229242615611251246079948812208279156194782421922807143657948315648\n",
      "2 ** 432 = 11090678776483259438313656736572334813745748301503266300681918322458485231222502492159897624416558312389564843845614287315896631296\n",
      "2 ** 433 = 22181357552966518876627313473144669627491496603006532601363836644916970462445004984319795248833116624779129687691228574631793262592\n",
      "2 ** 434 = 44362715105933037753254626946289339254982993206013065202727673289833940924890009968639590497666233249558259375382457149263586525184\n",
      "2 ** 435 = 88725430211866075506509253892578678509965986412026130405455346579667881849780019937279180995332466499116518750764914298527173050368\n",
      "2 ** 436 = 177450860423732151013018507785157357019931972824052260810910693159335763699560039874558361990664932998233037501529828597054346100736\n",
      "2 ** 437 = 354901720847464302026037015570314714039863945648104521621821386318671527399120079749116723981329865996466075003059657194108692201472\n",
      "2 ** 438 = 709803441694928604052074031140629428079727891296209043243642772637343054798240159498233447962659731992932150006119314388217384402944\n",
      "2 ** 439 = 1419606883389857208104148062281258856159455782592418086487285545274686109596480318996466895925319463985864300012238628776434768805888\n",
      "2 ** 440 = 2839213766779714416208296124562517712318911565184836172974571090549372219192960637992933791850638927971728600024477257552869537611776\n",
      "2 ** 441 = 5678427533559428832416592249125035424637823130369672345949142181098744438385921275985867583701277855943457200048954515105739075223552\n",
      "2 ** 442 = 11356855067118857664833184498250070849275646260739344691898284362197488876771842551971735167402555711886914400097909030211478150447104\n",
      "2 ** 443 = 22713710134237715329666368996500141698551292521478689383796568724394977753543685103943470334805111423773828800195818060422956300894208\n",
      "2 ** 444 = 45427420268475430659332737993000283397102585042957378767593137448789955507087370207886940669610222847547657600391636120845912601788416\n",
      "2 ** 445 = 90854840536950861318665475986000566794205170085914757535186274897579911014174740415773881339220445695095315200783272241691825203576832\n",
      "2 ** 446 = 181709681073901722637330951972001133588410340171829515070372549795159822028349480831547762678440891390190630401566544483383650407153664\n",
      "2 ** 447 = 363419362147803445274661903944002267176820680343659030140745099590319644056698961663095525356881782780381260803133088966767300814307328\n",
      "2 ** 448 = 726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656\n",
      "2 ** 449 = 1453677448591213781098647615776009068707282721374636120562980398361278576226795846652382101427527131121525043212532355867069203257229312\n",
      "2 ** 450 = 2907354897182427562197295231552018137414565442749272241125960796722557152453591693304764202855054262243050086425064711734138406514458624\n",
      "2 ** 451 = 5814709794364855124394590463104036274829130885498544482251921593445114304907183386609528405710108524486100172850129423468276813028917248\n",
      "2 ** 452 = 11629419588729710248789180926208072549658261770997088964503843186890228609814366773219056811420217048972200345700258846936553626057834496\n",
      "2 ** 453 = 23258839177459420497578361852416145099316523541994177929007686373780457219628733546438113622840434097944400691400517693873107252115668992\n",
      "2 ** 454 = 46517678354918840995156723704832290198633047083988355858015372747560914439257467092876227245680868195888801382801035387746214504231337984\n",
      "2 ** 455 = 93035356709837681990313447409664580397266094167976711716030745495121828878514934185752454491361736391777602765602070775492429008462675968\n",
      "2 ** 456 = 186070713419675363980626894819329160794532188335953423432061490990243657757029868371504908982723472783555205531204141550984858016925351936\n",
      "2 ** 457 = 372141426839350727961253789638658321589064376671906846864122981980487315514059736743009817965446945567110411062408283101969716033850703872\n",
      "2 ** 458 = 744282853678701455922507579277316643178128753343813693728245963960974631028119473486019635930893891134220822124816566203939432067701407744\n",
      "2 ** 459 = 1488565707357402911845015158554633286356257506687627387456491927921949262056238946972039271861787782268441644249633132407878864135402815488\n",
      "2 ** 460 = 2977131414714805823690030317109266572712515013375254774912983855843898524112477893944078543723575564536883288499266264815757728270805630976\n",
      "2 ** 461 = 5954262829429611647380060634218533145425030026750509549825967711687797048224955787888157087447151129073766576998532529631515456541611261952\n",
      "2 ** 462 = 11908525658859223294760121268437066290850060053501019099651935423375594096449911575776314174894302258147533153997065059263030913083222523904\n",
      "2 ** 463 = 23817051317718446589520242536874132581700120107002038199303870846751188192899823151552628349788604516295066307994130118526061826166445047808\n",
      "2 ** 464 = 47634102635436893179040485073748265163400240214004076398607741693502376385799646303105256699577209032590132615988260237052123652332890095616\n",
      "2 ** 465 = 95268205270873786358080970147496530326800480428008152797215483387004752771599292606210513399154418065180265231976520474104247304665780191232\n",
      "2 ** 466 = 190536410541747572716161940294993060653600960856016305594430966774009505543198585212421026798308836130360530463953040948208494609331560382464\n",
      "2 ** 467 = 381072821083495145432323880589986121307201921712032611188861933548019011086397170424842053596617672260721060927906081896416989218663120764928\n",
      "2 ** 468 = 762145642166990290864647761179972242614403843424065222377723867096038022172794340849684107193235344521442121855812163792833978437326241529856\n",
      "2 ** 469 = 1524291284333980581729295522359944485228807686848130444755447734192076044345588681699368214386470689042884243711624327585667956874652483059712\n",
      "2 ** 470 = 3048582568667961163458591044719888970457615373696260889510895468384152088691177363398736428772941378085768487423248655171335913749304966119424\n",
      "2 ** 471 = 6097165137335922326917182089439777940915230747392521779021790936768304177382354726797472857545882756171536974846497310342671827498609932238848\n",
      "2 ** 472 = 12194330274671844653834364178879555881830461494785043558043581873536608354764709453594945715091765512343073949692994620685343654997219864477696\n",
      "2 ** 473 = 24388660549343689307668728357759111763660922989570087116087163747073216709529418907189891430183531024686147899385989241370687309994439728955392\n",
      "2 ** 474 = 48777321098687378615337456715518223527321845979140174232174327494146433419058837814379782860367062049372295798771978482741374619988879457910784\n",
      "2 ** 475 = 97554642197374757230674913431036447054643691958280348464348654988292866838117675628759565720734124098744591597543956965482749239977758915821568\n",
      "2 ** 476 = 195109284394749514461349826862072894109287383916560696928697309976585733676235351257519131441468248197489183195087913930965498479955517831643136\n",
      "2 ** 477 = 390218568789499028922699653724145788218574767833121393857394619953171467352470702515038262882936496394978366390175827861930996959911035663286272\n",
      "2 ** 478 = 780437137578998057845399307448291576437149535666242787714789239906342934704941405030076525765872992789956732780351655723861993919822071326572544\n",
      "2 ** 479 = 1560874275157996115690798614896583152874299071332485575429578479812685869409882810060153051531745985579913465560703311447723987839644142653145088\n",
      "2 ** 480 = 3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176\n",
      "2 ** 481 = 6243497100631984462763194459586332611497196285329942301718313919250743477639531240240612206126983942319653862242813245790895951358576570612580352\n",
      "2 ** 482 = 12486994201263968925526388919172665222994392570659884603436627838501486955279062480481224412253967884639307724485626491581791902717153141225160704\n",
      "2 ** 483 = 24973988402527937851052777838345330445988785141319769206873255677002973910558124960962448824507935769278615448971252983163583805434306282450321408\n",
      "2 ** 484 = 49947976805055875702105555676690660891977570282639538413746511354005947821116249921924897649015871538557230897942505966327167610868612564900642816\n",
      "2 ** 485 = 99895953610111751404211111353381321783955140565279076827493022708011895642232499843849795298031743077114461795885011932654335221737225129801285632\n",
      "2 ** 486 = 199791907220223502808422222706762643567910281130558153654986045416023791284464999687699590596063486154228923591770023865308670443474450259602571264\n",
      "2 ** 487 = 399583814440447005616844445413525287135820562261116307309972090832047582568929999375399181192126972308457847183540047730617340886948900519205142528\n",
      "2 ** 488 = 799167628880894011233688890827050574271641124522232614619944181664095165137859998750798362384253944616915694367080095461234681773897801038410285056\n",
      "2 ** 489 = 1598335257761788022467377781654101148543282249044465229239888363328190330275719997501596724768507889233831388734160190922469363547795602076820570112\n",
      "2 ** 490 = 3196670515523576044934755563308202297086564498088930458479776726656380660551439995003193449537015778467662777468320381844938727095591204153641140224\n",
      "2 ** 491 = 6393341031047152089869511126616404594173128996177860916959553453312761321102879990006386899074031556935325554936640763689877454191182408307282280448\n",
      "2 ** 492 = 12786682062094304179739022253232809188346257992355721833919106906625522642205759980012773798148063113870651109873281527379754908382364816614564560896\n",
      "2 ** 493 = 25573364124188608359478044506465618376692515984711443667838213813251045284411519960025547596296126227741302219746563054759509816764729633229129121792\n",
      "2 ** 494 = 51146728248377216718956089012931236753385031969422887335676427626502090568823039920051095192592252455482604439493126109519019633529459266458258243584\n",
      "2 ** 495 = 102293456496754433437912178025862473506770063938845774671352855253004181137646079840102190385184504910965208878986252219038039267058918532916516487168\n",
      "2 ** 496 = 204586912993508866875824356051724947013540127877691549342705710506008362275292159680204380770369009821930417757972504438076078534117837065833032974336\n",
      "2 ** 497 = 409173825987017733751648712103449894027080255755383098685411421012016724550584319360408761540738019643860835515945008876152157068235674131666065948672\n",
      "2 ** 498 = 818347651974035467503297424206899788054160511510766197370822842024033449101168638720817523081476039287721671031890017752304314136471348263332131897344\n",
      "2 ** 499 = 1636695303948070935006594848413799576108321023021532394741645684048066898202337277441635046162952078575443342063780035504608628272942696526664263794688\n",
      "2 ** 500 = 3273390607896141870013189696827599152216642046043064789483291368096133796404674554883270092325904157150886684127560071009217256545885393053328527589376\n",
      "2 ** 501 = 6546781215792283740026379393655198304433284092086129578966582736192267592809349109766540184651808314301773368255120142018434513091770786106657055178752\n",
      "2 ** 502 = 13093562431584567480052758787310396608866568184172259157933165472384535185618698219533080369303616628603546736510240284036869026183541572213314110357504\n",
      "2 ** 503 = 26187124863169134960105517574620793217733136368344518315866330944769070371237396439066160738607233257207093473020480568073738052367083144426628220715008\n",
      "2 ** 504 = 52374249726338269920211035149241586435466272736689036631732661889538140742474792878132321477214466514414186946040961136147476104734166288853256441430016\n",
      "2 ** 505 = 104748499452676539840422070298483172870932545473378073263465323779076281484949585756264642954428933028828373892081922272294952209468332577706512882860032\n",
      "2 ** 506 = 209496998905353079680844140596966345741865090946756146526930647558152562969899171512529285908857866057656747784163844544589904418936665155413025765720064\n",
      "2 ** 507 = 418993997810706159361688281193932691483730181893512293053861295116305125939798343025058571817715732115313495568327689089179808837873330310826051531440128\n",
      "2 ** 508 = 837987995621412318723376562387865382967460363787024586107722590232610251879596686050117143635431464230626991136655378178359617675746660621652103062880256\n",
      "2 ** 509 = 1675975991242824637446753124775730765934920727574049172215445180465220503759193372100234287270862928461253982273310756356719235351493321243304206125760512\n",
      "2 ** 510 = 3351951982485649274893506249551461531869841455148098344430890360930441007518386744200468574541725856922507964546621512713438470702986642486608412251521024\n",
      "2 ** 511 = 6703903964971298549787012499102923063739682910296196688861780721860882015036773488400937149083451713845015929093243025426876941405973284973216824503042048\n",
      "2 ** 512 = 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096\n",
      "2 ** 513 = 26815615859885194199148049996411692254958731641184786755447122887443528060147093953603748596333806855380063716372972101707507765623893139892867298012168192\n",
      "2 ** 514 = 53631231719770388398296099992823384509917463282369573510894245774887056120294187907207497192667613710760127432745944203415015531247786279785734596024336384\n",
      "2 ** 515 = 107262463439540776796592199985646769019834926564739147021788491549774112240588375814414994385335227421520254865491888406830031062495572559571469192048672768\n",
      "2 ** 516 = 214524926879081553593184399971293538039669853129478294043576983099548224481176751628829988770670454843040509730983776813660062124991145119142938384097345536\n",
      "2 ** 517 = 429049853758163107186368799942587076079339706258956588087153966199096448962353503257659977541340909686081019461967553627320124249982290238285876768194691072\n",
      "2 ** 518 = 858099707516326214372737599885174152158679412517913176174307932398192897924707006515319955082681819372162038923935107254640248499964580476571753536389382144\n",
      "2 ** 519 = 1716199415032652428745475199770348304317358825035826352348615864796385795849414013030639910165363638744324077847870214509280496999929160953143507072778764288\n",
      "2 ** 520 = 3432398830065304857490950399540696608634717650071652704697231729592771591698828026061279820330727277488648155695740429018560993999858321906287014145557528576\n",
      "2 ** 521 = 6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057152\n",
      "2 ** 522 = 13729595320261219429963801598162786434538870600286610818788926918371086366795312104245119281322909109954592622782961716074243975999433287625148056582230114304\n",
      "2 ** 523 = 27459190640522438859927603196325572869077741200573221637577853836742172733590624208490238562645818219909185245565923432148487951998866575250296113164460228608\n",
      "2 ** 524 = 54918381281044877719855206392651145738155482401146443275155707673484345467181248416980477125291636439818370491131846864296975903997733150500592226328920457216\n",
      "2 ** 525 = 109836762562089755439710412785302291476310964802292886550311415346968690934362496833960954250583272879636740982263693728593951807995466301001184452657840914432\n",
      "2 ** 526 = 219673525124179510879420825570604582952621929604585773100622830693937381868724993667921908501166545759273481964527387457187903615990932602002368905315681828864\n",
      "2 ** 527 = 439347050248359021758841651141209165905243859209171546201245661387874763737449987335843817002333091518546963929054774914375807231981865204004737810631363657728\n",
      "2 ** 528 = 878694100496718043517683302282418331810487718418343092402491322775749527474899974671687634004666183037093927858109549828751614463963730408009475621262727315456\n",
      "2 ** 529 = 1757388200993436087035366604564836663620975436836686184804982645551499054949799949343375268009332366074187855716219099657503228927927460816018951242525454630912\n",
      "2 ** 530 = 3514776401986872174070733209129673327241950873673372369609965291102998109899599898686750536018664732148375711432438199315006457855854921632037902485050909261824\n",
      "2 ** 531 = 7029552803973744348141466418259346654483901747346744739219930582205996219799199797373501072037329464296751422864876398630012915711709843264075804970101818523648\n",
      "2 ** 532 = 14059105607947488696282932836518693308967803494693489478439861164411992439598399594747002144074658928593502845729752797260025831423419686528151609940203637047296\n",
      "2 ** 533 = 28118211215894977392565865673037386617935606989386978956879722328823984879196799189494004288149317857187005691459505594520051662846839373056303219880407274094592\n",
      "2 ** 534 = 56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184\n",
      "2 ** 535 = 112472844863579909570263462692149546471742427957547915827518889315295939516787196757976017152597271428748022765838022378080206651387357492225212879521629096378368\n",
      "2 ** 536 = 224945689727159819140526925384299092943484855915095831655037778630591879033574393515952034305194542857496045531676044756160413302774714984450425759043258192756736\n",
      "2 ** 537 = 449891379454319638281053850768598185886969711830191663310075557261183758067148787031904068610389085714992091063352089512320826605549429968900851518086516385513472\n",
      "2 ** 538 = 899782758908639276562107701537196371773939423660383326620151114522367516134297574063808137220778171429984182126704179024641653211098859937801703036173032771026944\n",
      "2 ** 539 = 1799565517817278553124215403074392743547878847320766653240302229044735032268595148127616274441556342859968364253408358049283306422197719875603406072346065542053888\n",
      "2 ** 540 = 3599131035634557106248430806148785487095757694641533306480604458089470064537190296255232548883112685719936728506816716098566612844395439751206812144692131084107776\n",
      "2 ** 541 = 7198262071269114212496861612297570974191515389283066612961208916178940129074380592510465097766225371439873457013633432197133225688790879502413624289384262168215552\n",
      "2 ** 542 = 14396524142538228424993723224595141948383030778566133225922417832357880258148761185020930195532450742879746914027266864394266451377581759004827248578768524336431104\n",
      "2 ** 543 = 28793048285076456849987446449190283896766061557132266451844835664715760516297522370041860391064901485759493828054533728788532902755163518009654497157537048672862208\n",
      "2 ** 544 = 57586096570152913699974892898380567793532123114264532903689671329431521032595044740083720782129802971518987656109067457577065805510327036019308994315074097345724416\n",
      "2 ** 545 = 115172193140305827399949785796761135587064246228529065807379342658863042065190089480167441564259605943037975312218134915154131611020654072038617988630148194691448832\n",
      "2 ** 546 = 230344386280611654799899571593522271174128492457058131614758685317726084130380178960334883128519211886075950624436269830308263222041308144077235977260296389382897664\n",
      "2 ** 547 = 460688772561223309599799143187044542348256984914116263229517370635452168260760357920669766257038423772151901248872539660616526444082616288154471954520592778765795328\n",
      "2 ** 548 = 921377545122446619199598286374089084696513969828232526459034741270904336521520715841339532514076847544303802497745079321233052888165232576308943909041185557531590656\n",
      "2 ** 549 = 1842755090244893238399196572748178169393027939656465052918069482541808673043041431682679065028153695088607604995490158642466105776330465152617887818082371115063181312\n",
      "2 ** 550 = 3685510180489786476798393145496356338786055879312930105836138965083617346086082863365358130056307390177215209990980317284932211552660930305235775636164742230126362624\n",
      "2 ** 551 = 7371020360979572953596786290992712677572111758625860211672277930167234692172165726730716260112614780354430419981960634569864423105321860610471551272329484460252725248\n",
      "2 ** 552 = 14742040721959145907193572581985425355144223517251720423344555860334469384344331453461432520225229560708860839963921269139728846210643721220943102544658968920505450496\n",
      "2 ** 553 = 29484081443918291814387145163970850710288447034503440846689111720668938768688662906922865040450459121417721679927842538279457692421287442441886205089317937841010900992\n",
      "2 ** 554 = 58968162887836583628774290327941701420576894069006881693378223441337877537377325813845730080900918242835443359855685076558915384842574884883772410178635875682021801984\n",
      "2 ** 555 = 117936325775673167257548580655883402841153788138013763386756446882675755074754651627691460161801836485670886719711370153117830769685149769767544820357271751364043603968\n",
      "2 ** 556 = 235872651551346334515097161311766805682307576276027526773512893765351510149509303255382920323603672971341773439422740306235661539370299539535089640714543502728087207936\n",
      "2 ** 557 = 471745303102692669030194322623533611364615152552055053547025787530703020299018606510765840647207345942683546878845480612471323078740599079070179281429087005456174415872\n",
      "2 ** 558 = 943490606205385338060388645247067222729230305104110107094051575061406040598037213021531681294414691885367093757690961224942646157481198158140358562858174010912348831744\n",
      "2 ** 559 = 1886981212410770676120777290494134445458460610208220214188103150122812081196074426043063362588829383770734187515381922449885292314962396316280717125716348021824697663488\n",
      "2 ** 560 = 3773962424821541352241554580988268890916921220416440428376206300245624162392148852086126725177658767541468375030763844899770584629924792632561434251432696043649395326976\n",
      "2 ** 561 = 7547924849643082704483109161976537781833842440832880856752412600491248324784297704172253450355317535082936750061527689799541169259849585265122868502865392087298790653952\n",
      "2 ** 562 = 15095849699286165408966218323953075563667684881665761713504825200982496649568595408344506900710635070165873500123055379599082338519699170530245737005730784174597581307904\n",
      "2 ** 563 = 30191699398572330817932436647906151127335369763331523427009650401964993299137190816689013801421270140331747000246110759198164677039398341060491474011461568349195162615808\n",
      "2 ** 564 = 60383398797144661635864873295812302254670739526663046854019300803929986598274381633378027602842540280663494000492221518396329354078796682120982948022923136698390325231616\n",
      "2 ** 565 = 120766797594289323271729746591624604509341479053326093708038601607859973196548763266756055205685080561326988000984443036792658708157593364241965896045846273396780650463232\n",
      "2 ** 566 = 241533595188578646543459493183249209018682958106652187416077203215719946393097526533512110411370161122653976001968886073585317416315186728483931792091692546793561300926464\n",
      "2 ** 567 = 483067190377157293086918986366498418037365916213304374832154406431439892786195053067024220822740322245307952003937772147170634832630373456967863584183385093587122601852928\n",
      "2 ** 568 = 966134380754314586173837972732996836074731832426608749664308812862879785572390106134048441645480644490615904007875544294341269665260746913935727168366770187174245203705856\n",
      "2 ** 569 = 1932268761508629172347675945465993672149463664853217499328617625725759571144780212268096883290961288981231808015751088588682539330521493827871454336733540374348490407411712\n",
      "2 ** 570 = 3864537523017258344695351890931987344298927329706434998657235251451519142289560424536193766581922577962463616031502177177365078661042987655742908673467080748696980814823424\n",
      "2 ** 571 = 7729075046034516689390703781863974688597854659412869997314470502903038284579120849072387533163845155924927232063004354354730157322085975311485817346934161497393961629646848\n",
      "2 ** 572 = 15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696\n",
      "2 ** 573 = 30916300184138066757562815127455898754391418637651479989257882011612153138316483396289550132655380623699708928252017417418920629288343901245943269387736645989575846518587392\n",
      "2 ** 574 = 61832600368276133515125630254911797508782837275302959978515764023224306276632966792579100265310761247399417856504034834837841258576687802491886538775473291979151693037174784\n",
      "2 ** 575 = 123665200736552267030251260509823595017565674550605919957031528046448612553265933585158200530621522494798835713008069669675682517153375604983773077550946583958303386074349568\n",
      "2 ** 576 = 247330401473104534060502521019647190035131349101211839914063056092897225106531867170316401061243044989597671426016139339351365034306751209967546155101893167916606772148699136\n",
      "2 ** 577 = 494660802946209068121005042039294380070262698202423679828126112185794450213063734340632802122486089979195342852032278678702730068613502419935092310203786335833213544297398272\n",
      "2 ** 578 = 989321605892418136242010084078588760140525396404847359656252224371588900426127468681265604244972179958390685704064557357405460137227004839870184620407572671666427088594796544\n",
      "2 ** 579 = 1978643211784836272484020168157177520281050792809694719312504448743177800852254937362531208489944359916781371408129114714810920274454009679740369240815145343332854177189593088\n",
      "2 ** 580 = 3957286423569672544968040336314355040562101585619389438625008897486355601704509874725062416979888719833562742816258229429621840548908019359480738481630290686665708354379186176\n",
      "2 ** 581 = 7914572847139345089936080672628710081124203171238778877250017794972711203409019749450124833959777439667125485632516458859243681097816038718961476963260581373331416708758372352\n",
      "2 ** 582 = 15829145694278690179872161345257420162248406342477557754500035589945422406818039498900249667919554879334250971265032917718487362195632077437922953926521162746662833417516744704\n",
      "2 ** 583 = 31658291388557380359744322690514840324496812684955115509000071179890844813636078997800499335839109758668501942530065835436974724391264154875845907853042325493325666835033489408\n",
      "2 ** 584 = 63316582777114760719488645381029680648993625369910231018000142359781689627272157995600998671678219517337003885060131670873949448782528309751691815706084650986651333670066978816\n",
      "2 ** 585 = 126633165554229521438977290762059361297987250739820462036000284719563379254544315991201997343356439034674007770120263341747898897565056619503383631412169301973302667340133957632\n",
      "2 ** 586 = 253266331108459042877954581524118722595974501479640924072000569439126758509088631982403994686712878069348015540240526683495797795130113239006767262824338603946605334680267915264\n",
      "2 ** 587 = 506532662216918085755909163048237445191949002959281848144001138878253517018177263964807989373425756138696031080481053366991595590260226478013534525648677207893210669360535830528\n",
      "2 ** 588 = 1013065324433836171511818326096474890383898005918563696288002277756507034036354527929615978746851512277392062160962106733983191180520452956027069051297354415786421338721071661056\n",
      "2 ** 589 = 2026130648867672343023636652192949780767796011837127392576004555513014068072709055859231957493703024554784124321924213467966382361040905912054138102594708831572842677442143322112\n",
      "2 ** 590 = 4052261297735344686047273304385899561535592023674254785152009111026028136145418111718463914987406049109568248643848426935932764722081811824108276205189417663145685354884286644224\n",
      "2 ** 591 = 8104522595470689372094546608771799123071184047348509570304018222052056272290836223436927829974812098219136497287696853871865529444163623648216552410378835326291370709768573288448\n",
      "2 ** 592 = 16209045190941378744189093217543598246142368094697019140608036444104112544581672446873855659949624196438272994575393707743731058888327247296433104820757670652582741419537146576896\n",
      "2 ** 593 = 32418090381882757488378186435087196492284736189394038281216072888208225089163344893747711319899248392876545989150787415487462117776654494592866209641515341305165482839074293153792\n",
      "2 ** 594 = 64836180763765514976756372870174392984569472378788076562432145776416450178326689787495422639798496785753091978301574830974924235553308989185732419283030682610330965678148586307584\n",
      "2 ** 595 = 129672361527531029953512745740348785969138944757576153124864291552832900356653379574990845279596993571506183956603149661949848471106617978371464838566061365220661931356297172615168\n",
      "2 ** 596 = 259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742929677132122730441323862712594345230336\n",
      "2 ** 597 = 518689446110124119814050982961395143876555779030304612499457166211331601426613518299963381118387974286024735826412598647799393884426471913485859354264245460882647725425188690460672\n",
      "2 ** 598 = 1037378892220248239628101965922790287753111558060609224998914332422663202853227036599926762236775948572049471652825197295598787768852943826971718708528490921765295450850377380921344\n",
      "2 ** 599 = 2074757784440496479256203931845580575506223116121218449997828664845326405706454073199853524473551897144098943305650394591197575537705887653943437417056981843530590901700754761842688\n",
      "2 ** 600 = 4149515568880992958512407863691161151012446232242436899995657329690652811412908146399707048947103794288197886611300789182395151075411775307886874834113963687061181803401509523685376\n",
      "2 ** 601 = 8299031137761985917024815727382322302024892464484873799991314659381305622825816292799414097894207588576395773222601578364790302150823550615773749668227927374122363606803019047370752\n",
      "2 ** 602 = 16598062275523971834049631454764644604049784928969747599982629318762611245651632585598828195788415177152791546445203156729580604301647101231547499336455854748244727213606038094741504\n",
      "2 ** 603 = 33196124551047943668099262909529289208099569857939495199965258637525222491303265171197656391576830354305583092890406313459161208603294202463094998672911709496489454427212076189483008\n",
      "2 ** 604 = 66392249102095887336198525819058578416199139715878990399930517275050444982606530342395312783153660708611166185780812626918322417206588404926189997345823418992978908854424152378966016\n",
      "2 ** 605 = 132784498204191774672397051638117156832398279431757980799861034550100889965213060684790625566307321417222332371561625253836644834413176809852379994691646837985957817708848304757932032\n",
      "2 ** 606 = 265568996408383549344794103276234313664796558863515961599722069100201779930426121369581251132614642834444664743123250507673289668826353619704759989383293675971915635417696609515864064\n",
      "2 ** 607 = 531137992816767098689588206552468627329593117727031923199444138200403559860852242739162502265229285668889329486246501015346579337652707239409519978766587351943831270835393219031728128\n"
     ]
    }
   ],
   "source": [
    "for i in range(60, 608):\n",
    "    print(f\"2 ** {i} = {2 ** i}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae02a39a",
   "metadata": {},
   "source": [
    "Does the problem occur without specifying the dtype `np.ones(1)`? Can you come up with a situation where you might encounter this problem ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "id": "a1a8e8b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0715086071862673e+301"
      ]
     },
     "execution_count": 264,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = np.arange(1000).astype(float)\n",
    "s = (2 ** x).sum()\n",
    "s"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "574334e9",
   "metadata": {},
   "source": [
    "#### In deep learning applications, chosing the \"right\" dtype is a very important tradeoff between speed and accuracy."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7540a340",
   "metadata": {},
   "source": [
    "#### 2) A practical example"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34b8c4ad",
   "metadata": {},
   "source": [
    "Consider the function $f(x) = 2x$ on $[0, 0.5]$ and $f(x) = 2x - 1$ on $]0.5, 1]$ \n",
    "\n",
    "1. Consider the sequence defined by $x_{n+1} = f(x_n)$ with $x_0 = 0.1$ Compute the first 5 elements of the sequence (manually). What do you conclude ?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "703140fd",
   "metadata": {},
   "source": [
    "2. Complete the function below and run the algorithm with a few hundred iterations. What do you observe ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "id": "bdcc7d80",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "iteration 0, x_i = 0.2\n",
      "iteration 1, x_i = 0.4\n",
      "iteration 2, x_i = 0.8\n",
      "iteration 3, x_i = 0.6000000000000001\n",
      "iteration 4, x_i = 0.20000000000000018\n",
      "iteration 5, x_i = 0.40000000000000036\n",
      "iteration 6, x_i = 0.8000000000000007\n",
      "iteration 7, x_i = 0.6000000000000014\n",
      "iteration 8, x_i = 0.20000000000000284\n",
      "iteration 9, x_i = 0.4000000000000057\n",
      "iteration 10, x_i = 0.8000000000000114\n",
      "iteration 11, x_i = 0.6000000000000227\n",
      "iteration 12, x_i = 0.20000000000004547\n",
      "iteration 13, x_i = 0.40000000000009095\n",
      "iteration 14, x_i = 0.8000000000001819\n",
      "iteration 15, x_i = 0.6000000000003638\n",
      "iteration 16, x_i = 0.2000000000007276\n",
      "iteration 17, x_i = 0.4000000000014552\n",
      "iteration 18, x_i = 0.8000000000029104\n",
      "iteration 19, x_i = 0.6000000000058208\n",
      "iteration 20, x_i = 0.20000000001164153\n",
      "iteration 21, x_i = 0.40000000002328306\n",
      "iteration 22, x_i = 0.8000000000465661\n",
      "iteration 23, x_i = 0.6000000000931323\n",
      "iteration 24, x_i = 0.20000000018626451\n",
      "iteration 25, x_i = 0.40000000037252903\n",
      "iteration 26, x_i = 0.8000000007450581\n",
      "iteration 27, x_i = 0.6000000014901161\n",
      "iteration 28, x_i = 0.20000000298023224\n",
      "iteration 29, x_i = 0.4000000059604645\n",
      "iteration 30, x_i = 0.800000011920929\n",
      "iteration 31, x_i = 0.6000000238418579\n",
      "iteration 32, x_i = 0.20000004768371582\n",
      "iteration 33, x_i = 0.40000009536743164\n",
      "iteration 34, x_i = 0.8000001907348633\n",
      "iteration 35, x_i = 0.6000003814697266\n",
      "iteration 36, x_i = 0.20000076293945312\n",
      "iteration 37, x_i = 0.40000152587890625\n",
      "iteration 38, x_i = 0.8000030517578125\n",
      "iteration 39, x_i = 0.600006103515625\n",
      "iteration 40, x_i = 0.20001220703125\n",
      "iteration 41, x_i = 0.4000244140625\n",
      "iteration 42, x_i = 0.800048828125\n",
      "iteration 43, x_i = 0.60009765625\n",
      "iteration 44, x_i = 0.2001953125\n",
      "iteration 45, x_i = 0.400390625\n",
      "iteration 46, x_i = 0.80078125\n",
      "iteration 47, x_i = 0.6015625\n",
      "iteration 48, x_i = 0.203125\n",
      "iteration 49, x_i = 0.40625\n",
      "iteration 50, x_i = 0.8125\n",
      "iteration 51, x_i = 0.625\n",
      "iteration 52, x_i = 0.25\n",
      "iteration 53, x_i = 0.5\n",
      "iteration 54, x_i = 1.0\n",
      "iteration 55, x_i = 1.0\n",
      "iteration 56, x_i = 1.0\n",
      "iteration 57, x_i = 1.0\n",
      "iteration 58, x_i = 1.0\n",
      "iteration 59, x_i = 1.0\n",
      "iteration 60, x_i = 1.0\n",
      "iteration 61, x_i = 1.0\n",
      "iteration 62, x_i = 1.0\n",
      "iteration 63, x_i = 1.0\n",
      "iteration 64, x_i = 1.0\n",
      "iteration 65, x_i = 1.0\n",
      "iteration 66, x_i = 1.0\n",
      "iteration 67, x_i = 1.0\n",
      "iteration 68, x_i = 1.0\n",
      "iteration 69, x_i = 1.0\n",
      "iteration 70, x_i = 1.0\n",
      "iteration 71, x_i = 1.0\n",
      "iteration 72, x_i = 1.0\n",
      "iteration 73, x_i = 1.0\n",
      "iteration 74, x_i = 1.0\n",
      "iteration 75, x_i = 1.0\n",
      "iteration 76, x_i = 1.0\n",
      "iteration 77, x_i = 1.0\n",
      "iteration 78, x_i = 1.0\n",
      "iteration 79, x_i = 1.0\n",
      "iteration 80, x_i = 1.0\n",
      "iteration 81, x_i = 1.0\n",
      "iteration 82, x_i = 1.0\n",
      "iteration 83, x_i = 1.0\n",
      "iteration 84, x_i = 1.0\n",
      "iteration 85, x_i = 1.0\n",
      "iteration 86, x_i = 1.0\n",
      "iteration 87, x_i = 1.0\n",
      "iteration 88, x_i = 1.0\n",
      "iteration 89, x_i = 1.0\n",
      "iteration 90, x_i = 1.0\n",
      "iteration 91, x_i = 1.0\n",
      "iteration 92, x_i = 1.0\n",
      "iteration 93, x_i = 1.0\n",
      "iteration 94, x_i = 1.0\n",
      "iteration 95, x_i = 1.0\n",
      "iteration 96, x_i = 1.0\n",
      "iteration 97, x_i = 1.0\n",
      "iteration 98, x_i = 1.0\n",
      "iteration 99, x_i = 1.0\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 270,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x0 = 0.1\n",
    "\n",
    "def f(x, n=100):\n",
    "    for i in range(n):\n",
    "        if x <= 0.5:\n",
    "            x *= 2\n",
    "        else:\n",
    "            x = 2 * x - 1\n",
    "\n",
    "        print(f\"iteration {i}, x_i = {x}\")\n",
    "    return x\n",
    "\n",
    "f(x0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b37811e",
   "metadata": {},
   "source": [
    "3. Take a moment a contemplate this mystery. What is the floating point binary representation of 0.1 ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "id": "7363c071",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.30000000000000004"
      ]
     },
     "execution_count": 289,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "0.1 + 0.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 295,
   "id": "3f833b8a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0 01111111011 1001100110011001100110011001100110011001100110011010'"
      ]
     },
     "execution_count": 295,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import struct\n",
    "\n",
    "def float_to_bin(f) -> str:\n",
    "    fmt = \">d\"\n",
    "    bz = struct.pack(fmt, f)\n",
    "    return \"\".join(f\"{b:08b}\" for b in bz)\n",
    "\n",
    "def sign_exponent_fraction(s):\n",
    "    return s[0:1], s[1:12], s[12:64]\n",
    "\n",
    "def pretty_float_bits(f) -> str:\n",
    "    return \" \".join(sign_exponent_fraction(float_to_bin(f)))\n",
    "\n",
    "pretty_float_bits(0.1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "id": "5c26306b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0 01111111101 0011001100110011001100110011001100110011001100110100'"
      ]
     },
     "execution_count": 278,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pretty_float_bits(0.1 + 0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "id": "fc455468",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0 01111111101 0011001100110011001100110011001100110011001100110011'"
      ]
     },
     "execution_count": 277,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pretty_float_bits(0.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 293,
   "id": "7e763228",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.1"
      ]
     },
     "execution_count": 293,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "100. - 100. + 0.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "id": "cb985cf0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.09999999999999432"
      ]
     },
     "execution_count": 297,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "0.1 + 100. - 100."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91e670da",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "2d451772",
   "metadata": {},
   "source": [
    "# 4. What does the function `pretty_float_bits` do ? Use it to explain the result of 3."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc896160",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "517bb030",
   "metadata": {},
   "source": [
    "#### 3) Machine precision and cumulative errors"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2eeaccf4",
   "metadata": {},
   "source": [
    "Consider the integral $$I_n = \\int_{0}^1 \\frac{x^n}{x + 10}dx$$\n",
    "\n",
    "1. Without computing $I_n$, find its limit.\n",
    "2. Find a recurrence formula between $I_{n+1}$ and $I_n$\n",
    "3. Study the stability of the problem by writing in the form F(I, d) = 0 where d is the starting element of the sequence.\n",
    "3. Write an algorithm to compute $I_n$ and test its stability. What happens ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b32426ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "def integral(i0, n):\n",
    "    ii = i0\n",
    "    for jj in range(n):\n",
    "        ii = \n",
    "        \n",
    "    return ii"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a39632f2",
   "metadata": {},
   "source": [
    "4. Replace 10 in the integral with a constant A > 1. Given a machine precision variable $\\varepsilon$, how can we set the number of iterations $n$ based on a desired cumulative error E ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1c131b83",
   "metadata": {},
   "outputs": [],
   "source": [
    "print(np.finfo(float).eps) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebb283da",
   "metadata": {},
   "source": [
    "5. Write a piece of code that can find $\\varepsilon$ numerically. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c63f2333",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "117bca24",
   "metadata": {},
   "source": [
    "6. Given what you know now, how should you test if two numbers or arrays are equal ? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "80c6d319",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = 6.409400000001\n",
    "y = 6.40948000003\n",
    "# if ..."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dcbaf2de",
   "metadata": {},
   "source": [
    "#### 4) Logsum-exp trick\n",
    "Consider a classification model with 4 classes. We are modeling the probablity of a sample being in class $k$ with: $$p_k = \\frac{ exp(w_k)}{\\sum_{i=1}^{4} exp(w_i)}$$\n",
    "\n",
    "where $w$ are the weights of a neural net.\n",
    "1. Why does this model make sense ?\n",
    "2. Given the example $w = [-20, -1, 0, 1000]$, it is obvious which class this sample should correspond to. Compute the prediction probabilities using the function below for this particular example. Explain."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3e9f6b85",
   "metadata": {},
   "outputs": [],
   "source": [
    "def predict(w):\n",
    "\n",
    "    \n",
    "    return p\n",
    "\n",
    "w = np.array([10, -1, 40, 2, 1000])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7d025fd",
   "metadata": {},
   "source": [
    "3. Even if we assume that $exp(w_k)$ do not overflow, computing the normalizing sum can cause problems if the number of labels is too large. After showing the following statement, propose a method to modify `predict` in order to avoid overflow errors:\n",
    "$$ \\forall c \\in \\mathbb{R} \\qquad log\\left(\\sum_{k=1}^K exp(w_k + c)\\right) =  c + log\\left(\\sum_{k=1}^K exp(w_k)\\right) $$ "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d41dffa9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def predict_stable(w):\n",
    "\n",
    "    return p"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f59d8043",
   "metadata": {},
   "source": [
    "4. Generate random weight vectors with `np.random.randn(K)` and test that both functions return the same probabilities. Test it with the scipy `logsumexp`: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cecf62ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.special import logsumexp\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d624b78f",
   "metadata": {},
   "source": [
    "5. Bonus: adapt your implementation of the `logsumexp` function so as to compute the Matrix-vector product:\n",
    "$ [Mb] $ where $M$ is a square matrix with positive entries and b a vector with positive entries. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "906c4288",
   "metadata": {},
   "outputs": [],
   "source": [
    "def stable_matrix_product(M, b):\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6609423f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
